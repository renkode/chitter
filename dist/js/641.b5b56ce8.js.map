{"version":3,"file":"js/641.b5b56ce8.js","mappings":"0UAUYA,EAAAA,EAAAA,KAAZ,MACMC,GAAQC,EAAAA,EAAAA,KACRC,GAASC,EAAAA,EAAAA,KAAS,IACtBH,EAAME,OAAOE,KAAKC,IAAD,CAAcC,KAAMD,EAAOE,KAAMF,EAAME,YAGvC,oBAASC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,IAAWC,EAAAA,EAAI,aAAhB,cAMnCC,eAAeC,EAAMC,SACb,IAAIC,SAASC,IACjBC,YAAW,QAERH,EAFH,GAIH,C,OAEDI,EAAAA,EAAAA,KAAU,KACRL,EAAM,EAAN,I,mIC5BF,MAAMM,EAAc,EAEpB,O","sources":["webpack://chitter/./src/components/TimelineMain.vue","webpack://chitter/./src/components/TimelineMain.vue?410b"],"sourcesContent":["<script setup>\r\nimport { onMounted, computed } from \"vue\";\r\nimport { useAppStore } from \"@/stores/app.js\";\r\nimport { useTweetStore } from \"@/stores/tweets.js\";\r\nimport ComposeTweet from \"./subcomponents/ComposeTweet.vue\";\r\nimport TweetList from \"./lists/TweetList.vue\";\r\nimport db from \"../firebase.js\";\r\n\r\nimport { collection, getDocs } from \"firebase/firestore\";\r\n\r\nconst app = useAppStore();\r\nconst store = useTweetStore();\r\nconst tweets = computed(() =>\r\n  store.tweets.map((tweet) => ({ data: tweet, type: tweet.type }))\r\n);\r\n\r\nconst querySnapshot = await getDocs(collection(db, \"tweets\"));\r\n// querySnapshot.forEach((doc) => {\r\n//   // doc.data() is never undefined for query doc snapshots\r\n//   console.log(doc.id, \" => \", doc.data());\r\n// });\r\n\r\nasync function delay(time) {\r\n  await new Promise((res) => {\r\n    setTimeout(() => {\r\n      //console.log(res);\r\n    }, time);\r\n  });\r\n}\r\n\r\nonMounted(() => {\r\n  delay(0);\r\n});\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <ComposeTweet />\r\n    <div class=\"tweet-list-container\">\r\n      <TweetList :tweets=\"tweets\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style></style>\r\n","import script from \"./TimelineMain.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TimelineMain.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["useAppStore","store","useTweetStore","tweets","computed","map","tweet","data","type","getDocs","collection","db","async","delay","time","Promise","res","setTimeout","onMounted","__exports__"],"sourceRoot":""}