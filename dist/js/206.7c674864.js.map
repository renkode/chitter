{"version":3,"file":"js/206.7c674864.js","mappings":"s2CASMA,GAAQC,EAAAA,EAAAA,KACRC,GAAQC,EAAAA,EAAAA,KAERC,GAAWC,EAAAA,EAAAA,KAAS,IACxBC,EAAMC,KAAKC,QAAQC,QAAQ,wBAAyB,IAAIA,QAAQ,OAAQ,MAEpEC,GAAWL,EAAAA,EAAAA,KAAS,IACxBM,EAAAA,EAAAA,eAA+BL,EAAMC,KAAKK,aAGtCC,EAAY,KAChBb,EAAMc,aAAa,gBACnBd,EAAMe,aAAN,E,g7FCfF,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,Q,0JCDMC,GAAaC,EAAAA,EAAAA,KACbhB,GAAQC,EAAAA,EAAAA,KAIRI,GAAOF,EAAAA,EAAAA,KACX,IAAMH,EAAMiB,kBAAkBb,EAAMc,YAEhCC,GAAMC,EAAAA,EAAAA,IAAI,UAEVC,EAAUC,IACdH,EAAII,MAAQD,CAAZ,EAGIE,EAAoB,IACjBnB,EAAKkB,MAAME,eAAeC,KAAKC,IAAD,CACnCC,KAAMb,EAAWc,SAASF,EAAEG,IAC5BC,KAAMJ,EAAEI,KACRC,YAAa,KACbC,cAAeN,EAAEM,cACjBvB,UAAWK,EAAWc,SAASF,EAAEG,IAAIpB,cAInCwB,EAAkB,IACf7B,EAAKkB,MAAMY,SAAST,KAAKC,IAAD,CAC7BC,KAAMb,EAAWc,SAASF,EAAEG,IAC5BC,KAAM,UACNC,YAAa3B,EAAKkB,MAAMa,KACxB1B,UAAWiB,EAAEjB,cAIX2B,EAAe,IACZhC,EAAKkB,MAAMe,MAAMZ,KAAKI,IAAD,CAC1BF,KAAMb,EAAWc,SAASC,OAMxBS,GAASpC,EAAAA,EAAAA,KAAS,KACtB,OAAQgB,EAAII,OACV,IAAK,qBACH,OAAOC,IAAoBgB,QACxBC,GAAyB,WAAfA,EAAMV,MAAoC,UAAfU,EAAMV,OAEhD,IAAK,QACH,OAAOP,IAAoBgB,QAAQC,GAAUA,EAAMR,gBACrD,IAAK,QACH,OAAOI,IACT,QACE,OAAOb,IACJgB,QACEC,GACgB,WAAfA,EAAMV,MACU,UAAfU,EAAMV,MACLU,EAAMb,KAAKc,gBAAkBD,EAAMb,KAAKe,WAE7CC,OAAOV,KACPW,MAAK,CAACC,EAAGC,IACRD,EAAEpC,UAAYqC,EAAErC,WAAa,EAAIoC,EAAEpC,UAAYqC,EAAErC,UAAY,EAAI,IAnBzE,I,8SC5CF,MAAM,EAAc,EAEpB,Q","sources":["webpack://chitter/./src/components/subcomponents/ProfileBio.vue","webpack://chitter/./src/components/subcomponents/ProfileBio.vue?7815","webpack://chitter/./src/components/ProfileMain.vue","webpack://chitter/./src/components/ProfileMain.vue?8782"],"sourcesContent":["<script setup>\r\nimport { defineProps, computed } from \"vue\";\r\nimport ProfilePicture from \"./ProfilePicture.vue\";\r\nimport HeaderPicture from \"./HeaderPicture.vue\";\r\nimport FollowButton from \"./FollowButton.vue\";\r\nimport formatDateMixin from \"@/mixins/formatDateMixin.js\";\r\nimport { useAppStore } from \"@/stores/app.js\";\r\nimport { useUsersStore } from \"@/stores/users.js\";\r\n\r\nconst store = useAppStore();\r\nconst users = useUsersStore();\r\nconst props = defineProps({ user: Object, tab: String, setTab: Function });\r\nconst shortURL = computed(() =>\r\n  props.user.website.replace(/https?:\\/\\/(www\\.)?/gi, \"\").replace(/\\/+$/, \"\")\r\n);\r\nconst joinDate = computed(() =>\r\n  formatDateMixin.formatJoinDate(props.user.timestamp)\r\n);\r\n\r\nconst openModal = () => {\r\n  store.setModalType(\"edit-profile\");\r\n  store.toggleModal();\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"profile-container\">\r\n    <HeaderPicture :url=\"props.user.headerUrl\" />\r\n\r\n    <div class=\"user-info-container\">\r\n      <div class=\"avatar-wrapper\">\r\n        <ProfilePicture :url=\"props.user.avatarUrl\" :size=\"135\" />\r\n        <button\r\n          class=\"edit-profile-btn\"\r\n          v-if=\"store.currentId == props.user.id\"\r\n          @click=\"openModal\"\r\n        >\r\n          Edit Profile\r\n        </button>\r\n        <FollowButton v-else :userId=\"props.user.id\" />\r\n      </div>\r\n      <div class=\"user-info-wrapper\">\r\n        <span class=\"display-name\">{{ props.user.name }}</span>\r\n        <span class=\"username-wrapper\">\r\n          <span class=\"username gray-text\"> @{{ props.user.username }} </span>\r\n          <div\r\n            v-if=\"users.isFollowingUser(props.user.id, store.currentId)\"\r\n            class=\"follows-you gray-text\"\r\n          >\r\n            Follows you\r\n          </div>\r\n        </span>\r\n      </div>\r\n      <span class=\"description\">{{ props.user.description }}</span>\r\n      <span class=\"misc-info-wrapper\">\r\n        <span class=\"misc-info gray-text\" v-if=\"props.user.location\"\r\n          ><span class=\"misc-icon\"\r\n            ><v-icon\r\n              name=\"md-locationon-outlined\"\r\n              scale=\"1.0\"\r\n              fill=\"#ffffff80\" /></span\r\n          >{{ props.user.location }}</span\r\n        >\r\n        <span class=\"misc-info gray-text\" v-if=\"props.user.website\">\r\n          <span class=\"misc-icon\"\r\n            ><v-icon name=\"oi-link\" scale=\"1.0\" fill=\"#ffffff80\" /></span\r\n          ><a class=\"blue-link\" :href=\"props.user.website\">{{\r\n            shortURL\r\n          }}</a></span\r\n        >\r\n        <span class=\"misc-info gray-text\" v-if=\"props.user.birthday.length > 1\">\r\n          <span class=\"misc-icon\"\r\n            ><v-icon\r\n              name=\"la-birthday-cake-solid\"\r\n              scale=\"1.0\"\r\n              fill=\"#ffffff80\" /></span\r\n          >{{ props.user.birthday }}</span\r\n        >\r\n        <span class=\"misc-info gray-text\" v-if=\"joinDate\"\r\n          ><span class=\"misc-icon\"\r\n            ><v-icon name=\"bi-calendar3\" scale=\"1.0\" fill=\"#ffffff80\" /></span\r\n          >Joined {{ joinDate }}</span\r\n        >\r\n      </span>\r\n      <span class=\"follow-metric-wrapper\">\r\n        <router-link\r\n          class=\"follow-metric\"\r\n          :to=\"{\r\n            name: 'Following',\r\n            params: { username: props.user.username },\r\n          }\"\r\n          ><strong>{{ props.user.followingCount }}</strong\r\n          ><span class=\"follow gray-text\"> Following</span></router-link\r\n        >\r\n        <router-link\r\n          class=\"follow-metric\"\r\n          :to=\"{\r\n            name: 'Followers',\r\n            params: { username: props.user.username },\r\n          }\"\r\n          ><strong>{{ props.user.followerCount }}</strong\r\n          ><span class=\"follow gray-text\"> Followers</span></router-link\r\n        >\r\n      </span>\r\n    </div>\r\n\r\n    <div class=\"profile-tab-container\">\r\n      <span\r\n        class=\"profile-tab\"\r\n        :class=\"{ 'gray-text': props.tab !== 'tweets' }\"\r\n        @click=\"setTab('tweets')\"\r\n        ><span class=\"tab-wrapper\"\r\n          >Tweets\r\n          <span\r\n            class=\"tab-indicator\"\r\n            v-if=\"props.tab === 'tweets'\"\r\n          ></span> </span\r\n      ></span>\r\n      <span\r\n        class=\"profile-tab\"\r\n        :class=\"{ 'gray-text': props.tab !== 'tweets-and-replies' }\"\r\n        @click=\"setTab('tweets-and-replies')\"\r\n        ><span class=\"tab-wrapper\"\r\n          >Tweets & replies\r\n          <span\r\n            class=\"tab-indicator\"\r\n            v-if=\"props.tab === 'tweets-and-replies'\"\r\n          ></span> </span\r\n      ></span>\r\n      <span\r\n        class=\"profile-tab\"\r\n        :class=\"{ 'gray-text': props.tab !== 'media' }\"\r\n        @click=\"setTab('media')\"\r\n        ><span class=\"tab-wrapper\"\r\n          >Media\r\n          <span\r\n            class=\"tab-indicator\"\r\n            v-if=\"props.tab === 'media'\"\r\n          ></span> </span\r\n      ></span>\r\n      <span\r\n        class=\"profile-tab\"\r\n        :class=\"{ 'gray-text': props.tab !== 'likes' }\"\r\n        @click=\"setTab('likes')\"\r\n        ><span class=\"tab-wrapper\"\r\n          >Likes\r\n          <span\r\n            class=\"tab-indicator\"\r\n            v-if=\"props.tab === 'likes'\"\r\n          ></span> </span\r\n      ></span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\na.follow-metric,\r\na.follow-metric:link,\r\na.follow-metric:visited {\r\n  color: white;\r\n}\r\n\r\n.profile-container {\r\n  max-width: 600px;\r\n  width: 100%;\r\n  height: fit-content;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.avatar-wrapper {\r\n  position: relative;\r\n  overflow: visible;\r\n  height: min(60px, 18vw);\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.profile-pic {\r\n  position: absolute;\r\n  width: min(135px, 25vw) !important;\r\n  left: 0;\r\n  top: max(-85px, -20vw);\r\n  outline: #262a2e solid 4px;\r\n}\r\n\r\n.edit-profile-btn {\r\n  border-radius: 18px;\r\n  cursor: pointer;\r\n  transition: all 0.15s ease;\r\n  height: 36px;\r\n  width: fit-content;\r\n  padding: 0 1rem;\r\n  background-color: #262a2e;\r\n  color: white;\r\n  border: #ffffff80 solid 1px;\r\n}\r\n\r\n.edit-profile-btn:hover {\r\n  background-color: #becae51e;\r\n}\r\n\r\n.user-info-container {\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 1.2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.user-info-wrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 1.05rem;\r\n  width: 100%;\r\n}\r\n\r\n.username-wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  height: fit-content;\r\n  width: 100%;\r\n}\r\n\r\n.follows-you {\r\n  border-radius: 5px;\r\n  background-color: rgba(255, 255, 255, 0.12);\r\n  font-size: 0.7rem;\r\n  height: 1rem;\r\n  padding: 0 4px;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: nowrap;\r\n  word-wrap: normal;\r\n  word-break: normal;\r\n  white-space: nowrap;\r\n}\r\n\r\n.description {\r\n  font-size: 1.05rem;\r\n}\r\n\r\n.misc-info-wrapper {\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  height: 100%;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.misc-info {\r\n  height: 1.5rem;\r\n  font-size: 1.05rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-right: 1rem;\r\n  word-wrap: nowrap;\r\n  word-break: keep-all;\r\n}\r\n\r\n.misc-icon {\r\n  margin-right: 0.4rem;\r\n}\r\n\r\n.user-info-wrapper,\r\n.description,\r\n.misc-info-wrapper {\r\n  margin-bottom: 0.7rem;\r\n}\r\n\r\n.follow-metric-wrapper {\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n\r\n.follow-metric {\r\n  margin-right: 1.2rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.follow-metric:hover {\r\n  text-decoration: underline;\r\n  text-decoration-color: white;\r\n}\r\n\r\n.profile-tab-container {\r\n  width: 100%;\r\n  height: 53px;\r\n  display: flex;\r\n}\r\n\r\n.profile-tab {\r\n  flex-grow: 1;\r\n  cursor: pointer;\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: background-color 0.15s ease;\r\n  flex-wrap: nowrap;\r\n  width: fit-content;\r\n}\r\n\r\n.profile-tab:hover {\r\n  background-color: #becae51e;\r\n}\r\n\r\n.tab-wrapper {\r\n  height: 100%;\r\n  min-width: fit-content;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  flex-wrap: nowrap;\r\n  word-wrap: normal;\r\n  word-break: keep-all;\r\n  white-space: nowrap;\r\n}\r\n\r\n.tab-indicator {\r\n  content: \"\";\r\n  width: 100%;\r\n  height: 4px;\r\n  background-color: #1d9bf0;\r\n  border-radius: 2px;\r\n  position: absolute;\r\n  bottom: 0;\r\n}\r\n</style>\r\n","import script from \"./ProfileBio.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProfileBio.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ProfileBio.vue?vue&type=style&index=0&id=24668144&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Documents\\\\repos\\\\chitter\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-24668144\"]])\n\nexport default __exports__","<script setup>\r\nimport { defineProps, ref, computed } from \"vue\";\r\nimport ProfileBio from \"./subcomponents/ProfileBio.vue\";\r\nimport TweetList from \"./lists/TweetList.vue\";\r\nimport { useUsersStore } from \"@/stores/users.js\";\r\nimport { useTweetStore } from \"@/stores/tweets.js\";\r\n\r\nconst tweetStore = useTweetStore();\r\nconst users = useUsersStore();\r\n\r\nconst props = defineProps([\"username\"]);\r\n\r\nconst user = computed(\r\n  () => users.getUserByUsername(props.username) // even if i use a regular function, this.$route won't work so...\r\n);\r\nconst tab = ref(\"tweets\"); // tweets-and-replies | media | likes\r\n\r\nconst setTab = (newTab) => {\r\n  tab.value = newTab;\r\n};\r\n\r\nconst mapFromUserTweets = () => {\r\n  return user.value.authoredTweets.map((t) => ({\r\n    data: tweetStore.getTweet(t.id),\r\n    type: t.type,\r\n    retweetedBy: null,\r\n    containsMedia: t.containsMedia,\r\n    timestamp: tweetStore.getTweet(t.id).timestamp,\r\n  }));\r\n};\r\n\r\nconst mapFromRetweets = () => {\r\n  return user.value.retweets.map((t) => ({\r\n    data: tweetStore.getTweet(t.id),\r\n    type: \"retweet\",\r\n    retweetedBy: user.value.name,\r\n    timestamp: t.timestamp,\r\n  }));\r\n};\r\n\r\nconst mapFromLikes = () => {\r\n  return user.value.likes.map((id) => ({\r\n    data: tweetStore.getTweet(id),\r\n  }));\r\n};\r\n\r\n// filter suitable tweets then map to an object usable by TweetList\r\n// idk how i managed to implement this within an hour with minimal bugs but i will not question it\r\nconst tweets = computed(() => {\r\n  switch (tab.value) {\r\n    case \"tweets-and-replies\":\r\n      return mapFromUserTweets().filter(\r\n        (tweet) => tweet.type === \"status\" || tweet.type === \"reply\"\r\n      );\r\n    case \"media\":\r\n      return mapFromUserTweets().filter((tweet) => tweet.containsMedia);\r\n    case \"likes\":\r\n      return mapFromLikes();\r\n    default:\r\n      return mapFromUserTweets()\r\n        .filter(\r\n          (tweet) =>\r\n            tweet.type === \"status\" ||\r\n            (tweet.type === \"reply\" &&\r\n              tweet.data.replyingToUser == tweet.data.authorId) // self reply\r\n        )\r\n        .concat(mapFromRetweets())\r\n        .sort((a, b) =>\r\n          a.timestamp > b.timestamp ? -1 : a.timestamp < b.timestamp ? 1 : 0\r\n        );\r\n  }\r\n});\r\n</script>\r\n\r\n<template>\r\n  <div class=\"profile-wrapper\">\r\n    <ProfileBio v-if=\"user\" :user=\"user\" :tab=\"tab\" :setTab=\"setTab\" />\r\n    <TweetList v-if=\"user\" :tweets=\"tweets\" />\r\n    <div class=\"error gray-text\" v-else>User not found.</div>\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n.profile-wrapper {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n</style>\r\n","import script from \"./ProfileMain.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProfileMain.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ProfileMain.vue?vue&type=style&index=0&id=0c9b98ba&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["store","useAppStore","users","useUsersStore","shortURL","computed","props","user","website","replace","joinDate","formatDateMixin","timestamp","openModal","setModalType","toggleModal","__exports__","tweetStore","useTweetStore","getUserByUsername","username","tab","ref","setTab","newTab","value","mapFromUserTweets","authoredTweets","map","t","data","getTweet","id","type","retweetedBy","containsMedia","mapFromRetweets","retweets","name","mapFromLikes","likes","tweets","filter","tweet","replyingToUser","authorId","concat","sort","a","b"],"sourceRoot":""}