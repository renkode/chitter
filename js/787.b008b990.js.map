{"version":3,"file":"js/787.b008b990.js","mappings":"y1CAWMA,GAAMC,EAAAA,EAAAA,KACNC,GAAQC,EAAAA,EAAAA,KAERC,GAAgBC,EAAAA,EAAAA,IAAIC,EAAMC,KAAKH,eAC/BI,GAAWC,EAAAA,EAAAA,KAAS,IACxBH,EAAMC,KAAKG,QAAQC,QAAQ,wBAAyB,IAAIA,QAAQ,OAAQ,MAEpEC,GAAWH,EAAAA,EAAAA,KAAS,IACxBI,EAAAA,EAAAA,eAA+BP,EAAMC,KAAKO,aAEtCC,GAAcV,EAAAA,EAAAA,MAAG,mBACfH,EAAMc,gBAAgBV,EAAMC,KAAKU,GAAIf,EAAMgB,aAA3C,kB,8lGChBR,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,Q,gMCQMC,GAAQC,EAAAA,GAAAA,KACRnB,GAAQC,EAAAA,EAAAA,KAKRmB,GAAUjB,EAAAA,EAAAA,KAAI,GACdkB,GAAWlB,EAAAA,EAAAA,KAAI,GACfmB,GAAcf,EAAAA,EAAAA,KAAS,IAAMP,EAAMsB,cACnCjB,GAAOF,EAAAA,EAAAA,IACXH,EAAMgB,WAAaZ,EAAMmB,WAAavB,EAAMsB,YAAYC,SACpDD,EAAYE,QADhB,mBAEUxB,EAAMyB,kBAAkBrB,EAAMmB,YAA9B,kBAENG,GAASnB,EAAAA,EAAAA,KAAS,IAAMW,EAAMQ,SAC9BC,GAAMxB,EAAAA,EAAAA,IAAI,UACVyB,GAAYzB,EAAAA,EAAAA,MAAG,mBAAO0B,MAAY,kBAClCC,GAAc3B,EAAAA,EAAAA,IAAI4B,GAElBC,EAAUC,IACdN,EAAIH,MAAQS,CAAZ,EAIFC,eAAeH,EAAYI,SAEnBC,QAAQC,IACZF,EAAIG,KAAIJ,SACNK,OAAOC,aAAatB,EAAMuB,SAASC,EAAE3B,IAAK,CACxC4B,YAAwB,YAAXD,EAAEE,KAAqBxC,EAAMmB,SAAW,KACrDX,UAAW8B,EAAE9B,UACbgC,KAAMF,EAAEE,KACRC,eAAgBH,EAAEG,eAAiB7C,EAAMsB,YAAYC,SAAW,UAGpEuB,MAAMC,IACN3B,EAAQI,OAAQ,EAChBH,EAASG,OAAQ,EACjBN,EAAMQ,OAAOsB,QAAQD,EAArB,GAEH,CAEDb,eAAee,EAAsBd,SAE7BC,QAAQC,IACZF,EAAIG,KAAIJ,SACNK,OAAOC,aAAatB,EAAMuB,SAASC,EAAE3B,IAAK,CACxCV,WAAYL,EAAMkD,aAAaR,EAAES,UACjCN,qBAAsB7C,EAAMoD,YAAYV,EAAEG,qBAG9CC,MAAMC,IACN3B,EAAQI,OAAQ,EAChBH,EAASG,OAAQ,EACjBN,EAAMQ,OAAOsB,QAAQD,EAArB,GAEH,CAEDb,eAAemB,EAAWlB,SAClBC,QAAQC,IACZF,EAAIG,KAAIJ,SACNhB,EAAMuB,SAASC,EAAE3B,IAAI+B,MAAKZ,SACxBK,OAAOC,OAAOc,EAAM,CAClBT,qBAAsB7C,EAAMoD,YAAYE,EAAKT,uBAInDC,MAAMC,IACN3B,EAAQI,OAAQ,EAChBH,EAASG,OAAQ,EACjBN,EAAMQ,OAAOsB,QAAQD,EAArB,GAEH,CAEDb,eAAeqB,EAAWpB,GACxB,OAAOC,QAAQC,IACbF,EAAIG,KAAIJ,SACNhB,EAAMuB,SAAS1B,GAAI+B,MAAKZ,SACtBK,OAAOC,OAAOc,EAAM,CAClBT,qBAAsB7C,EAAMoD,YAAYE,EAAKT,uBAInDC,MAAMC,IACN3B,EAAQI,OAAQ,EAChBH,EAASG,OAAQ,EACjBN,EAAMQ,OAAOsB,QAAQD,EAArB,GAEH,CAEDb,eAAeL,IACbR,EAASG,OAAQ,EACjB,MAAMgC,QAAYxD,EAAMyD,cAAcpD,EAAKmB,MAAMT,IACjD,OAAQY,EAAIH,OACV,IAAK,qBACH,OAAON,EAAMwC,gBACXF,EAAIG,QAAQC,GAAyB,WAAfA,EAAMhB,MAAoC,UAAfgB,EAAMhB,QAE3D,IAAK,QACH,OAAO1B,EAAMwC,gBAAgBF,EAAIG,QAAQC,GAAUA,EAAMC,iBAC3D,IAAK,QACH,OAAOxD,EAAKmB,MAAMsC,MACpB,QACE,OAAO5C,EAAMwC,gBACXF,EAAIG,QACDC,GACgB,WAAfA,EAAMhB,MACS,YAAfgB,EAAMhB,MACNgB,EAAMG,eAIjB,CAGD,MAAMC,EAAe9B,UAGnB,OAFAhB,EAAM+C,UAAU,IAChBrC,EAAUJ,YAAcK,IAChBF,EAAIH,OACV,IAAK,qBACHyB,EAAsBrB,EAAUJ,MAAM0C,MAAM,EAAGhD,EAAMiD,aACrDrC,EAAYN,MAAQyB,EACpB,MACF,IAAK,QACHI,EAAWzB,EAAUJ,MAAM0C,MAAM,EAAGhD,EAAMiD,aAC1CrC,EAAYN,MAAQ6B,EACpB,MACF,IAAK,QACHE,EAAW3B,EAAUJ,MAAM0C,MAAM,EAAGhD,EAAMiD,aAC1CrC,EAAYN,MAAQ+B,EACpB,MACF,QACExB,EAAYH,EAAUJ,MAAM0C,MAAM,EAAGhD,EAAMiD,aAC3CrC,EAAYN,MAAQO,EAfxB,E,OAmBFqC,EAAAA,EAAAA,KAAc,KACZlD,EAAM+C,UAAU,GAAhB,KAGFI,EAAAA,EAAAA,KAAU,KACW,OAAfhE,EAAKmB,OACTO,EAAYH,EAAUJ,MAAM0C,MAAM,EAAGhD,EAAMiD,YAA3C,KAIFG,EAAAA,EAAAA,IAAM3C,GAAK,KACTP,EAAQI,OAAQ,EAChBwC,GAAc,KAIhBM,EAAAA,EAAAA,IAAMhD,GAAa,KACblB,EAAMmB,WAAavB,EAAMsB,YAAYC,WACvClB,EAAKmB,MAAQF,EAAYE,MAAzB,KAIJ8C,EAAAA,EAAAA,KACE,IAAMlE,EAAMmB,WACZW,UACE7B,EAAKmB,MACHpB,EAAMmB,WAAavB,EAAMsB,YAAYC,SACjCD,EAAYE,YACNxB,EAAMyB,kBAAkBrB,EAAMmB,UAC1CyC,GAAc,I,knBCjLlB,MAAM,GAAc,GAEpB,S","sources":["webpack://chitter/./src/components/subcomponents/ProfileBio.vue","webpack://chitter/./src/components/subcomponents/ProfileBio.vue?7815","webpack://chitter/./src/components/ProfileView.vue","webpack://chitter/./src/components/ProfileView.vue?77aa"],"sourcesContent":["<script setup>\r\nimport { ref, defineProps, computed } from \"vue\";\r\nimport ProfilePicture from \"./ProfilePicture.vue\";\r\nimport HeaderPicture from \"./HeaderPicture.vue\";\r\nimport FollowButton from \"./FollowButton.vue\";\r\nimport EmbeddedText from \"./EmbeddedText.vue\";\r\nimport formatDateMixin from \"@/mixins/formatDateMixin.js\";\r\nimport { useAppStore } from \"@/stores/app.js\";\r\nimport { useUsersStore } from \"@/stores/users.js\";\r\nimport { getSingular } from \"@/mixins/utilities\";\r\n\r\nconst app = useAppStore();\r\nconst users = useUsersStore();\r\nconst props = defineProps({ user: Object, tab: String, setTab: Function });\r\nconst followerCount = ref(props.user.followerCount);\r\nconst shortURL = computed(() =>\r\n  props.user.website.replace(/https?:\\/\\/(www\\.)?/gi, \"\").replace(/\\/+$/, \"\")\r\n);\r\nconst joinDate = computed(() =>\r\n  formatDateMixin.formatJoinDate(props.user.timestamp)\r\n);\r\nconst isFollowing = ref(\r\n  await users.isFollowingUser(props.user.id, users.currentId)\r\n);\r\n</script>\r\n\r\n<template>\r\n  <div class=\"profile-container\">\r\n    <HeaderPicture :url=\"props.user.headerUrl\" />\r\n\r\n    <div class=\"user-info-container\">\r\n      <div class=\"avatar-wrapper\">\r\n        <ProfilePicture :url=\"props.user.avatarUrl\" :size=\"135\" />\r\n        <button\r\n          class=\"edit-profile-btn\"\r\n          v-if=\"users.currentId == props.user.id\"\r\n          @click=\"app.toggleModal('edit-profile')\"\r\n        >\r\n          Edit Profile\r\n        </button>\r\n        <FollowButton\r\n          v-else-if=\"users.currentUser\"\r\n          :userId=\"props.user.id\"\r\n          @increment=\"(n) => (followerCount += n)\"\r\n        />\r\n      </div>\r\n      <div class=\"user-info-wrapper\">\r\n        <span class=\"display-name\">{{ props.user.name }}</span>\r\n        <span class=\"username-wrapper\">\r\n          <span class=\"username gray-text\"> @{{ props.user.username }} </span>\r\n          <div\r\n            v-if=\"users.currentId && isFollowing\"\r\n            class=\"follows-you gray-text\"\r\n          >\r\n            Follows you\r\n          </div>\r\n        </span>\r\n      </div>\r\n      <span class=\"description\"\r\n        ><EmbeddedText :text=\"props.user.description\"\r\n      /></span>\r\n      <span class=\"misc-info-wrapper\">\r\n        <span class=\"misc-info gray-text\" v-if=\"props.user.location\"\r\n          ><span class=\"misc-icon\"\r\n            ><v-icon\r\n              name=\"md-locationon-outlined\"\r\n              scale=\"1.0\"\r\n              fill=\"#ffffff80\" /></span\r\n          >{{ props.user.location }}</span\r\n        >\r\n        <span class=\"misc-info gray-text\" v-if=\"props.user.website\">\r\n          <span class=\"misc-icon\"\r\n            ><v-icon name=\"oi-link\" scale=\"1.0\" fill=\"#ffffff80\" /></span\r\n          ><a class=\"blue-link\" :href=\"props.user.website\">{{\r\n            shortURL\r\n          }}</a></span\r\n        >\r\n        <span class=\"misc-info gray-text\" v-if=\"props.user.birthday.length > 1\">\r\n          <span class=\"misc-icon\"\r\n            ><v-icon\r\n              name=\"la-birthday-cake-solid\"\r\n              scale=\"1.0\"\r\n              fill=\"#ffffff80\" /></span\r\n          >{{ props.user.birthday }}</span\r\n        >\r\n        <span class=\"misc-info gray-text\" v-if=\"joinDate\"\r\n          ><span class=\"misc-icon\"\r\n            ><v-icon name=\"bi-calendar3\" scale=\"1.0\" fill=\"#ffffff80\" /></span\r\n          >Joined {{ joinDate }}</span\r\n        >\r\n      </span>\r\n      <span class=\"follow-metric-wrapper\">\r\n        <router-link\r\n          class=\"follow-metric\"\r\n          :to=\"{\r\n            name: 'Following',\r\n            params: { username: props.user.username },\r\n          }\"\r\n          ><strong>{{ props.user.followingCount }}</strong\r\n          ><span class=\"follow gray-text\"> Following</span></router-link\r\n        >\r\n        <router-link\r\n          class=\"follow-metric\"\r\n          :to=\"{ name: 'Followers', params: { username: props.user.username } }\"\r\n          ><strong>{{ followerCount }}</strong\r\n          ><span class=\"follow gray-text\">\r\n            {{ getSingular(\" Followers\", followerCount) }}</span\r\n          ></router-link\r\n        >\r\n      </span>\r\n    </div>\r\n\r\n    <div class=\"profile-tab-container\">\r\n      <span\r\n        class=\"profile-tab\"\r\n        :class=\"{ 'gray-text': props.tab !== 'tweets' }\"\r\n        @click=\"setTab('tweets')\"\r\n        ><span class=\"tab-wrapper\"\r\n          >Tweets\r\n          <span\r\n            class=\"tab-indicator\"\r\n            v-show=\"props.tab === 'tweets'\"\r\n          ></span> </span\r\n      ></span>\r\n      <span\r\n        class=\"profile-tab\"\r\n        :class=\"{ 'gray-text': props.tab !== 'tweets-and-replies' }\"\r\n        @click=\"setTab('tweets-and-replies')\"\r\n        ><span class=\"tab-wrapper\"\r\n          >Tweets & replies\r\n          <span\r\n            class=\"tab-indicator\"\r\n            v-show=\"props.tab === 'tweets-and-replies'\"\r\n          ></span> </span\r\n      ></span>\r\n      <span\r\n        class=\"profile-tab\"\r\n        :class=\"{ 'gray-text': props.tab !== 'media' }\"\r\n        @click=\"setTab('media')\"\r\n        ><span class=\"tab-wrapper\"\r\n          >Media\r\n          <span\r\n            class=\"tab-indicator\"\r\n            v-show=\"props.tab === 'media'\"\r\n          ></span> </span\r\n      ></span>\r\n      <span\r\n        class=\"profile-tab\"\r\n        :class=\"{ 'gray-text': props.tab !== 'likes' }\"\r\n        @click=\"setTab('likes')\"\r\n        ><span class=\"tab-wrapper\"\r\n          >Likes\r\n          <span\r\n            class=\"tab-indicator\"\r\n            v-show=\"props.tab === 'likes'\"\r\n          ></span> </span\r\n      ></span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\na.follow-metric,\r\na.follow-metric:link,\r\na.follow-metric:visited {\r\n  color: white;\r\n}\r\n\r\n.profile-container {\r\n  max-width: 600px;\r\n  width: 100%;\r\n  height: fit-content;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.avatar-wrapper {\r\n  position: relative;\r\n  overflow: visible;\r\n  height: min(60px, 18vw);\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.profile-pic {\r\n  position: absolute;\r\n  width: min(135px, 25vw) !important;\r\n  left: 0;\r\n  top: max(-85px, -20vw);\r\n  outline: #262a2e solid 4px;\r\n}\r\n\r\n.edit-profile-btn {\r\n  border-radius: 18px;\r\n  cursor: pointer;\r\n  transition: all 0.15s ease;\r\n  height: 36px;\r\n  width: fit-content;\r\n  padding: 0 1rem;\r\n  background-color: #262a2e;\r\n  color: white;\r\n  border: #ffffff80 solid 1px;\r\n}\r\n\r\n.edit-profile-btn:hover {\r\n  background-color: #becae51e;\r\n}\r\n\r\n.user-info-container {\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 1.2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.user-info-wrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 1.05rem;\r\n  width: 100%;\r\n}\r\n\r\n.username-wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  height: fit-content;\r\n  width: 100%;\r\n}\r\n\r\n.display-name {\r\n  font-weight: bold;\r\n  line-height: 1.3rem;\r\n}\r\n\r\n.follows-you {\r\n  border-radius: 5px;\r\n  background-color: rgba(255, 255, 255, 0.12);\r\n  font-size: 0.7rem;\r\n  height: 1rem;\r\n  padding: 0 4px;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: nowrap;\r\n  word-wrap: normal;\r\n  word-break: normal;\r\n  white-space: nowrap;\r\n}\r\n\r\n.description {\r\n  font-size: 1.05rem;\r\n}\r\n\r\n.misc-info-wrapper {\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  height: 100%;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.misc-info {\r\n  height: 1.5rem;\r\n  font-size: 1.05rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-right: 1rem;\r\n  word-wrap: nowrap;\r\n  word-break: keep-all;\r\n}\r\n\r\n.misc-icon {\r\n  margin-right: 0.4rem;\r\n}\r\n\r\n.user-info-wrapper,\r\n.description,\r\n.misc-info-wrapper {\r\n  margin-bottom: 0.7rem;\r\n}\r\n\r\n.follow-metric-wrapper {\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n\r\n.follow-metric {\r\n  margin-right: 1.2rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.follow-metric:hover {\r\n  text-decoration: underline;\r\n  text-decoration-color: white;\r\n}\r\n\r\n.profile-tab-container {\r\n  width: 100%;\r\n  height: 53px;\r\n  display: flex;\r\n}\r\n\r\n.profile-tab {\r\n  flex-grow: 1;\r\n  cursor: pointer;\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: background-color 0.15s ease;\r\n  flex-wrap: nowrap;\r\n  width: fit-content;\r\n  text-shadow: 1px 0px 0px white;\r\n}\r\n\r\n.profile-tab.gray-text {\r\n  text-shadow: none;\r\n}\r\n\r\n.profile-tab:hover {\r\n  background-color: #becae51e;\r\n}\r\n\r\n.tab-wrapper {\r\n  height: 100%;\r\n  min-width: fit-content;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  flex-wrap: nowrap;\r\n  word-wrap: normal;\r\n  word-break: keep-all;\r\n  white-space: nowrap;\r\n}\r\n\r\n.tab-indicator {\r\n  content: \"\";\r\n  width: 100%;\r\n  height: 4px;\r\n  background-color: #1d9bf0;\r\n  border-radius: 2px;\r\n  position: absolute;\r\n  bottom: 0;\r\n}\r\n</style>\r\n","import script from \"./ProfileBio.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProfileBio.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ProfileBio.vue?vue&type=style&index=0&id=1d79ab14&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Documents\\\\repos\\\\chitter\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1d79ab14\"]])\n\nexport default __exports__","<script setup>\r\nimport {\r\n  defineProps,\r\n  ref,\r\n  computed,\r\n  watch,\r\n  onMounted,\r\n  onBeforeMount,\r\n} from \"vue\";\r\nimport ProfileBio from \"./subcomponents/ProfileBio.vue\";\r\nimport TweetList from \"./lists/TweetList.vue\";\r\nimport LoadSpinner from \"./subcomponents/LoadSpinner.vue\";\r\nimport LoadTweets from \"./subcomponents/LoadTweets.vue\";\r\nimport { useUsersStore } from \"@/stores/users.js\";\r\nimport { useTweetStore } from \"@/stores/tweets.js\";\r\n\r\nconst store = useTweetStore();\r\nconst users = useUsersStore();\r\n\r\nconst props = defineProps([\"username\"]);\r\n\r\n// initialize\r\nconst pending = ref(true);\r\nconst fetching = ref(true);\r\nconst currentUser = computed(() => users.currentUser);\r\nconst user = ref(\r\n  users.currentId && props.username === users.currentUser.username\r\n    ? currentUser.value\r\n    : await users.getUserByUsername(props.username)\r\n);\r\nconst tweets = computed(() => store.tweets);\r\nconst tab = ref(\"tweets\"); // tweets-and-replies | media | likes\r\nconst rawTweets = ref(await setRawTweets());\r\nconst fetchMethod = ref(fetchTweets);\r\n\r\nconst setTab = (newTab) => {\r\n  tab.value = newTab;\r\n};\r\n\r\n// functions for fetching tweets based on tab\r\nasync function fetchTweets(arr) {\r\n  // add retweetedBy property if applicable and update type/timestamp for retweets\r\n  await Promise.all(\r\n    arr.map(async (t) =>\r\n      Object.assign(await store.getTweet(t.id), {\r\n        retweetedBy: t.type === \"retweet\" ? props.username : null,\r\n        timestamp: t.timestamp,\r\n        type: t.type,\r\n        replyingToUser: t.replyingToUser ? users.currentUser.username : null,\r\n      })\r\n    )\r\n  ).then((values) => {\r\n    pending.value = false;\r\n    fetching.value = false;\r\n    store.tweets.push(...values);\r\n  });\r\n}\r\n\r\nasync function fetchTweetsAndReplies(arr) {\r\n  // add replyingToUser property if applicable\r\n  await Promise.all(\r\n    arr.map(async (t) =>\r\n      Object.assign(await store.getTweet(t.id), {\r\n        user: await users.getUserProps(t.authorId),\r\n        replyingToUser: await users.getUsername(t.replyingToUser),\r\n      })\r\n    )\r\n  ).then((values) => {\r\n    pending.value = false;\r\n    fetching.value = false;\r\n    store.tweets.push(...values);\r\n  });\r\n}\r\n\r\nasync function fetchMedia(arr) {\r\n  await Promise.all(\r\n    arr.map(async (t) =>\r\n      store.getTweet(t.id).then(async (data) =>\r\n        Object.assign(data, {\r\n          replyingToUser: await users.getUsername(data.replyingToUser),\r\n        })\r\n      )\r\n    )\r\n  ).then((values) => {\r\n    pending.value = false;\r\n    fetching.value = false;\r\n    store.tweets.push(...values);\r\n  });\r\n}\r\n\r\nasync function fetchLikes(arr) {\r\n  return Promise.all(\r\n    arr.map(async (id) =>\r\n      store.getTweet(id).then(async (data) =>\r\n        Object.assign(data, {\r\n          replyingToUser: await users.getUsername(data.replyingToUser),\r\n        })\r\n      )\r\n    )\r\n  ).then((values) => {\r\n    pending.value = false;\r\n    fetching.value = false;\r\n    store.tweets.push(...values);\r\n  });\r\n}\r\n\r\nasync function setRawTweets() {\r\n  fetching.value = true;\r\n  const doc = await users.getUserTweets(user.value.id);\r\n  switch (tab.value) {\r\n    case \"tweets-and-replies\":\r\n      return store.sortByTimestamp(\r\n        doc.filter((tweet) => tweet.type === \"status\" || tweet.type === \"reply\")\r\n      );\r\n    case \"media\":\r\n      return store.sortByTimestamp(doc.filter((tweet) => tweet.containsMedia));\r\n    case \"likes\":\r\n      return user.value.likes;\r\n    default:\r\n      return store.sortByTimestamp(\r\n        doc.filter(\r\n          (tweet) =>\r\n            tweet.type === \"status\" ||\r\n            tweet.type === \"retweet\" ||\r\n            tweet.isSelfReply\r\n        )\r\n      );\r\n  }\r\n}\r\n\r\n// set rawtweets (for loadtweet component), fetch actual tweets then set fetchmethod\r\nconst updateTweets = async () => {\r\n  store.setTweets([]);\r\n  rawTweets.value = await setRawTweets();\r\n  switch (tab.value) {\r\n    case \"tweets-and-replies\":\r\n      fetchTweetsAndReplies(rawTweets.value.slice(0, store.fetchLimit));\r\n      fetchMethod.value = fetchTweetsAndReplies;\r\n      break;\r\n    case \"media\":\r\n      fetchMedia(rawTweets.value.slice(0, store.fetchLimit));\r\n      fetchMethod.value = fetchMedia;\r\n      break;\r\n    case \"likes\":\r\n      fetchLikes(rawTweets.value.slice(0, store.fetchLimit));\r\n      fetchMethod.value = fetchLikes;\r\n      break;\r\n    default:\r\n      fetchTweets(rawTweets.value.slice(0, store.fetchLimit));\r\n      fetchMethod.value = fetchTweets;\r\n  }\r\n};\r\n\r\nonBeforeMount(() => {\r\n  store.setTweets([]);\r\n});\r\n\r\nonMounted(() => {\r\n  if (user.value === null) return;\r\n  fetchTweets(rawTweets.value.slice(0, store.fetchLimit));\r\n});\r\n\r\n// update tweets on tab change\r\nwatch(tab, () => {\r\n  pending.value = true;\r\n  updateTweets();\r\n});\r\n\r\n// update profile whenever info changes\r\nwatch(currentUser, () => {\r\n  if (props.username === users.currentUser.username)\r\n    user.value = currentUser.value;\r\n});\r\n\r\n// update profile whenever user changes\r\nwatch(\r\n  () => props.username,\r\n  async () => {\r\n    user.value =\r\n      props.username === users.currentUser.username\r\n        ? currentUser.value\r\n        : await users.getUserByUsername(props.username);\r\n    updateTweets();\r\n  }\r\n);\r\n</script>\r\n\r\n<template>\r\n  <div class=\"profile-wrapper\">\r\n    <ProfileBio v-if=\"user\" :user=\"user\" :tab=\"tab\" :setTab=\"setTab\" />\r\n    <TweetList v-if=\"!pending && user\" :tweets=\"tweets\" :pending=\"pending\" />\r\n    <LoadSpinner v-if=\"pending && user !== null\" />\r\n    <div class=\"error gray-text\" v-if=\"user === null\">User not found.</div>\r\n    <LoadTweets\r\n      v-if=\"!pending\"\r\n      :isFetching=\"fetching\"\r\n      :rawTweets=\"rawTweets.slice(store.fetchLimit)\"\r\n      :fetch=\"fetchMethod\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n.profile-wrapper {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n</style>\r\n","import script from \"./ProfileView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProfileView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ProfileView.vue?vue&type=style&index=0&id=81a2952e&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["app","useAppStore","users","useUsersStore","followerCount","ref","props","user","shortURL","computed","website","replace","joinDate","formatDateMixin","timestamp","isFollowing","isFollowingUser","id","currentId","__exports__","store","useTweetStore","pending","fetching","currentUser","username","value","getUserByUsername","tweets","tab","rawTweets","setRawTweets","fetchMethod","fetchTweets","setTab","newTab","async","arr","Promise","all","map","Object","assign","getTweet","t","retweetedBy","type","replyingToUser","then","values","push","fetchTweetsAndReplies","getUserProps","authorId","getUsername","fetchMedia","data","fetchLikes","doc","getUserTweets","sortByTimestamp","filter","tweet","containsMedia","likes","isSelfReply","updateTweets","setTweets","slice","fetchLimit","onBeforeMount","onMounted","watch"],"sourceRoot":""}